pipeline{
    agent any
    stages{
        stage('init build images'){
            steps {
                script {
            if (!fileExists('/home/ubuntu/.m2')) {
                sh 'whoami && sudo apt update && sudo apt install maven -y || exit 1'
            }
                }
                script {
            if (!fileExists('/home/ubuntu/DockJaNetes')) {
                sh 'cd /home/ubuntu && git clone https://github.com/sharma04500/DockJaNetes.git'
            }
                }
            steps {
                sh 'cd /home/ubuntu/DockJaNetes/ && git pull origin main || exit 1'
            }
            }
        }
        stage('build shopfront image'){
            steps{
                sh 'cd /home/ubuntu/DockJaNetes/shopfront/ && mvn clean install'
                sh 'for i in `docker image ls -aq`; do docker image rm -f $i; done'
                sh 'cd /home/ubuntu/DockJaNetes/shopfront/ && docker image build . -t akells05/shopfront:latest'
            }
        }
        stage('build prodcat image'){
            steps{
                sh 'cd /home/ubuntu/DockJaNetes/productcatalogue/ && mvn clean install'
                sh 'cd /home/ubuntu/DockJaNetes/productcatalogue/ && docker image build . -t akells05/prodcat:latest'
            }
        }
        stage('build stockmanager image'){
            steps{
                sh 'cd /home/ubuntu/DockJaNetes/stockmanager/ && mvn clean install'
                sh 'cd /home/ubuntu/DockJaNetes/stockmanager/ && docker image build . -t akells05/stockmanager:latest'
            }
        }
        stage('push all the images to dockerhub'){
            steps{
                sh 'docker push akells05/shopfront:latest'
                sh 'docker push akells05/prodcat:latest'
                sh 'docker push akells05/stockmanager:latest'
            }
        }
        stage('Delete existing k8s objects'){
            steps{
                sh 'kubectl delete svc shopfront && kubectl delete deploy shopfront || exit 0'
                sh 'kubectl delete svc productcatalogue && kubectl delete deploy productcatalogue || exit 0'
                sh 'kubectl delete svc stockmanager && kubectl delete deploy stockmanager || exit 0'
            }
        }
        stage('Deploy Shopfront to K8s'){
            steps{
                sh 'cd /home/ubuntu/DockJaNetes/kubernetes/ && kubectl create -f  shopfront-service.yaml'
            }
        }
        stage('Deploy productcatalogue to K8s'){
            steps{
                sh 'cd /home/ubuntu/DockJaNetes/kubernetes/ && kubectl create -f productcatalogue-service.yaml'
            }
        }
        stage('Deploy stockmanager to K8s'){
            steps{
                sh 'cd /home/ubuntu/DockJaNetes/kubernetes/ && kubectl create -f stockmanager-service.yaml'
            }
        }
   }
}
    
    

    //      Use this Jenkinsfile, to create a CI/CD solution using seperate server, which will remain outside of the cluster,
    // so that we can have the advantage of preserving the Jenkins logs and data for reviewing, even if entire cluster is lost.
    // We can also use PV and PVC {EFS or EBS}, mounted at the Jenkins data directory in order to keep the Jenkins data safe
    // while running jenkins as a k8s pod.
